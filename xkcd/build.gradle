ext {
    isProprietary = rootProject.ext.isProprietary
}

if (isProprietary) {
    apply plugin: 'AndResGuard'
}
apply plugin: 'com.android.application'
if (isProprietary) {
    apply plugin: 'io.fabric'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
if (!getGradle().getStartParameter().getTaskRequests()
        .toString().endsWith("AndroidTest")) {
    apply plugin: 'com.didiglobal.booster'
}

if (isProprietary) {
    andResGuard {
        mappingFile = file("./resource_mapping.txt")
        useSign = true
        keepRoot = false
        mergeDuplicatedRes = true
        fixedResName = "x"
        whiteList = [
                // for icon
                "R.mipmap.ic_launcher",
                "R.mipmap.ic_launcher_round",
                // for fabric
                "R.string.com.crashlytics.*",
                // for google-services
                "R.string.default_web_client_id",
                "R.string.firebase_database_url",
                "R.string.gcm_defaultSenderId",
                "R.string.google_api_key",
                "R.string.google_app_id",
                "R.string.google_crash_reporting_api_key",
                "R.string.google_storage_bucket",
                "R.string.project_id",

                "R.string.arrow_1",
                "R.string.arrow_10",
                "R.string.arrow_30"
        ]
        compressFilePattern = [
                "*.png",
                "*.jpg",
                "*.jpeg",
                "*.gif",
        ]
    }
}

android {
    packagingOptions {
        exclude "/META-INF/*.kotlin_module"
        exclude "/kotlinx/coroutines/*.kotlin_metadata"
        exclude "/kotlinx/coroutines/*/*.kotlin_metadata"
        exclude "**/kotlin/**"
        exclude "/META-INF/*.version"
        exclude "/META-INF/CHANGES"
        exclude "/META-INF/*.md"
    }
    compileSdkVersion 29

    defaultConfig {
        applicationId "xyz.jienan.xkcd"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 58
        versionName "2.6.18"
        vectorDrawables.useSupportLibrary = true
        resConfigs "zh-rCN"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseConfig {
            File key = file("../key.jks")
            if (key.exists()) {
                storeFile key
                Properties properties = new Properties()
                File localProperty = file('../local.properties')
                if (localProperty.exists())
                    properties.load(localProperty.newDataInputStream())
                storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : (System.getenv("KEYSTORE_PASS") ? System.getenv("KEYSTORE_PASS") : properties.getProperty("KEYSTORE_PASS"))
                keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : (System.getenv("ALIAS_NAME") ? System.getenv("ALIAS_NAME") : properties.getProperty("ALIAS_NAME"))
                keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : (System.getenv("ALIAS_PASS") ? System.getenv("ALIAS_PASS") : properties.getProperty("ALIAS_PASS"))
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-debug.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project-test.pro'
            applicationIdSuffix ".debug"
            multiDexEnabled false
            ext.enableCrashlytics = false
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
            multiDexEnabled false
        }
    }

    flavorDimensions "distribution"

    productFlavors {
        foss {
            dimension "distribution"
            ext.enableCrashlytics = false
        }
        proprietary {
            dimension "distribution"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = 1.8
    }

    lintOptions {
        abortOnError true
    }

    aaptOptions {
        cruncherEnabled = isProprietary
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'
    debugImplementation 'com.gu.android:toolargetool:0.2.1@aar'
    debugImplementation "io.objectbox:objectbox-android-objectbrowser:$objectboxVersion"
    releaseImplementation "io.objectbox:objectbox-android:$objectboxVersion"

    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta05'
    implementation 'com.google.android.material:material:1.1.0-beta01'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.0'
    implementation('com.squareup.okhttp3:logging-interceptor:3.12.3') {
        force = true // don't change
    }
    implementation('com.squareup.okhttp3:okhttp:3.12.3') {
        force = true // from 3.13, okhttp only support Android 5+
        // https://cashapp.github.io/2019-02-05/okhttp-3-13-requires-android-5
    }
    implementation 'com.squareup:seismic:1.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation('com.github.bumptech.glide:glide:3.8.0') {
        force = true
    }
    implementation('com.github.bumptech.glide:okhttp3-integration:1.5.0') {
        force = true
    }
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'me.dkzwm.widget.srl:core:1.6.6.7.androidx'
    implementation 'me.dkzwm.widget.srl:ext-classics:1.6.6.7.androidx'

    fossImplementation "androidx.work:work-runtime-ktx:2.2.0"
    fossImplementation "androidx.work:work-rxjava2:2.2.0"
    proprietaryImplementation 'com.google.firebase:firebase-core:17.2.0'
    proprietaryImplementation 'com.google.firebase:firebase-messaging:20.0.0'
    proprietaryImplementation "com.crashlytics.sdk.android:crashlytics:2.10.1"

//    implementation 'androidx.slice:slice-core:1.0.0'
//    implementation 'androidx.slice:slice-builders:1.0.0'

    testImplementation 'junit:junit:4.12'

//    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.2.0"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.2.0"
    androidTestImplementation(
            'org.hamcrest:hamcrest-core:1.3',
            'org.hamcrest:hamcrest-integration:1.3',
            'org.hamcrest:hamcrest-library:1.3'
    )

//    implementation 'androidx.multidex:multidex:2.0.1'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'
    }
}

println "Task exec " + getGradle().getStartParameter().getTaskRequests().toString()

apply plugin: 'com.getkeepsafe.dexcount'
if (isProprietary) {
    apply plugin: 'com.google.gms.google-services'
}
apply plugin: 'io.objectbox'