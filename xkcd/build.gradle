apply plugin: 'AndResGuard'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

andResGuard {
    mappingFile = null
    useSign = true
    keepRoot = false

    whiteList = [
            // for icon
            "R.ic_launcher.png",
            "R.ic_launcher_round.png",
            // for fabric
            "R.string.com.crashlytics.*",
            // for google-services
            "R.string.default_web_client_id",
            "R.string.firebase_database_url",
            "R.string.gcm_defaultSenderId",
            "R.string.google_api_key",
            "R.string.google_app_id",
            "R.string.google_crash_reporting_api_key",
            "R.string.google_storage_bucket",
            "R.string.project_id",

            "R.string.arrow_1",
            "R.string.arrow_10",
            "R.string.arrow_30"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
    ]
}

android {
    packagingOptions {
        exclude "/META-INF/*.kotlin_module"
        exclude "**/kotlin/**"
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "xyz.jienan.xkcd"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 28
        versionName "2.3.5"
        vectorDrawables.useSupportLibrary = true
        resConfigs "zh-rCN"
    }

    signingConfigs {
        releaseConfig {
            File key = file("../key.jks")
            if (key.exists()) {
                storeFile key
                Properties properties = new Properties()
                File localProperty = file('../local.properties')
                if (localProperty.exists())
                    properties.load(localProperty.newDataInputStream())
                storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : (System.getenv("KEYSTORE_PASS") ? System.getenv("KEYSTORE_PASS") : properties.getProperty("KEYSTORE_PASS"))
                keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : (System.getenv("ALIAS_NAME") ? System.getenv("ALIAS_NAME") : properties.getProperty("ALIAS_NAME"))
                keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : (System.getenv("ALIAS_PASS") ? System.getenv("ALIAS_PASS") : properties.getProperty("ALIAS_PASS"))
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            useProguard false
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'androidx.media:media:1.1.0-alpha01'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'

    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha01'
    implementation 'com.google.android.material:material:1.1.0-alpha01'

    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'com.jakewharton:butterknife:9.0.0-rc2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc2'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'com.squareup:seismic:1.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.5.0'
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-messaging:17.3.3'
    implementation 'com.dinuscxj:circleprogressbar:1.1.1'
    implementation 'com.github.piasy:BigImageViewer:1.4.6'
    implementation "com.crashlytics.sdk.android:crashlytics:2.9.5"
    debugImplementation "io.objectbox:objectbox-android-objectbrowser:$objectboxVersion"
    releaseImplementation "io.objectbox:objectbox-android:$objectboxVersion"
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.objectbox'
